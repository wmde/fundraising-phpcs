<?xml version="1.0"?>
<ruleset>
    <rule ref="./vendor/mediawiki/mediawiki-codesniffer/MediaWiki">
        <!-- we'll define our own line length rule that ignores long test names -->
        <exclude name="Generic.Files.LineLength" />

        <!-- Docblocks should be completely optional, type annotations are better -->
        <exclude name="MediaWiki.Commenting.FunctionComment.MissingDocumentationPrivate" />
        <exclude name="MediaWiki.Commenting.FunctionComment.MissingDocumentationProtected" />
        <exclude name="MediaWiki.Commenting.FunctionComment.MissingDocumentationPublic" />

        <!-- Ignore unknown annotations -->
        <!-- TODO: Define our own set of allowed annotations -->
        <exclude name="MediaWiki.Commenting.FunctionAnnotations.UnrecognizedAnnotation" />

        <!-- Allow indentation in Docblock annotations for setting Doctrine indexes -->
        <exclude name="MediaWiki.Commenting.DocComment.SpacingDocTag" />

		<!-- Don't force docblocks for scope annotation, we use PHP keywords for that -->
		<exclude name="MediaWiki.Commenting.PropertyDocumentation.MissingDocumentationPrivate" />
		<exclude name="MediaWiki.Commenting.PropertyDocumentation.MissingDocumentationProtected" />

        <!--
            The following sniffs are interfering with PHP 8.1 intersection types using "&"
            Remove the exclusions when they are ready for PHP 8.1
            See https://github.com/squizlabs/PHP_CodeSniffer/issues/3479
            See https://phabricator.wikimedia.org/T305140
        -->
        <exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterReference" />
        <exclude name="MediaWiki.Commenting.FunctionComment.ParamPassByReference" />

        <!-- Allow assert - we use it for some domain-specific sanity checks where the type system would -->
        <!-- TODO: Add sniff to make sure assert is only called with boolean expressions -->
        <exclude name="MediaWiki.Usage.ForbiddenFunctions.assert" />
    </rule>

    <rule ref="Generic.Files.LineLength">
        <properties>
            <!-- More than 120 will throw a warning ... -->
            <property name="lineLimit" value="120" />
            <!-- ... but we will most probably never throw an error -->
            <property name="absoluteLineLimit" value="9999" />
        </properties>
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>
</ruleset>
