<?xml version="1.0"?>
<ruleset>
    <rule ref="./vendor/mediawiki/mediawiki-codesniffer/MediaWiki">
        <!-- we'll define our own line length rule that ignores long test names -->
        <exclude name="Generic.Files.LineLength" />

        <!-- Ignore unknown annotations -->
        <!-- TODO: Define our own set of allowed annotations -->
        <exclude name="MediaWiki.Commenting.FunctionAnnotations.UnrecognizedAnnotation" />

        <!-- Allow indentation in Docblock annotations for setting Doctrine indexes -->
		<exclude name="MediaWiki.Commenting.DocComment.SpacingDocTag" />

		<!--
			Disable requiring @covers annotations on tests.
			We're using the `requireCoversAnnotation` PHPUnit setting instead.
			Starting with PHPUnit 11, we'll no longer have annotations but 
			PHP attributes, causing this sniff to generate errors for every method in our tests.
			See https://phabricator.wikimedia.org/T329048 for a ticket that
			might add attribute attribute support. If that ticket is done, we can enable the sniff again
		--> 
		<exclude name="MediaWiki.Commenting.MissingCovers.MissingCovers" />
    </rule>

    <rule ref="Generic.Files.LineLength">
        <properties>
            <!-- More than 120 will throw a warning ... -->
            <property name="lineLimit" value="120" />
            <!-- ... but we will most probably never throw an error -->
            <property name="absoluteLineLimit" value="9999" />
        </properties>
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>
</ruleset>
